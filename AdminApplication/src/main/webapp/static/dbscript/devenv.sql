--	schema name : - mousbear-devenv

	CREATE TABLE MOUS_USER ( 
    USER_ID INTEGER NOT NULL AUTO_INCREMENT,
    FIRST_NAME VARCHAR (25) NOT NULL,
    LAST_NAME VARCHAR (25) NOT NULL,
    EMAIL VARCHAR (50) NOT NULL,
    MOBILE_NUMBER VARCHAR (10) NOT NULL,
    REMARKS VARCHAR (500) NOT NULL,
    DOB VARCHAR (10),
    GENDER CHAR (1),
    CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UC_MOUS_USER UNIQUE (USER_ID,EMAIL,MOBILE_NUMBER),
    PRIMARY KEY (USER_ID)
    );
	
	CREATE TABLE USER_ADDRESS ( 
    ADDRESS_ID INTEGER NOT NULL AUTO_INCREMENT,
    ADDRESS VARCHAR (100) NOT NULL,
    LANDMARK VARCHAR (100) ,
    CITY VARCHAR (50) NOT NULL,
    STATE VARCHAR (50) NOT NULL,
    PIN_CODE VARCHAR (6) NOT NULL,
    LONGITUDE FLOAT,
    LATITUDE FLOAT,
    USER_ID INTEGER,
    CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UC_USER_ADDRESS UNIQUE (ADDRESS_ID),
    PRIMARY KEY (ADDRESS_ID),
    FOREIGN KEY (USER_ID) REFERENCES MOUS_USER (USER_ID)
    );
	
	
	
	CREATE TABLE ROLE ( 
    ROLE_ID INTEGER NOT NULL AUTO_INCREMENT,
    ROLE_NAME VARCHAR (30) NOT NULL,
    CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UC_ROLE UNIQUE (ROLE_ID),
    PRIMARY KEY (ROLE_ID)
    );
	
	
	
	CREATE TABLE USER_ROLE ( 
    USER_ROLE_ID INTEGER NOT NULL AUTO_INCREMENT,
    USER_ID INTEGER,
    ROLE_ID INTEGER,
    CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UC_USER_ROLE UNIQUE (USER_ROLE_ID),
    PRIMARY KEY (USER_ROLE_ID),
    FOREIGN KEY (USER_ID) REFERENCES MOUS_USER (USER_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID)
    );
	
	
	
	CREATE TABLE CATEGORY ( 
    CATEGORY_ID INTEGER NOT NULL AUTO_INCREMENT,
    CATEGORY_NAME TEXT,
    IMAGE TEXT,
    CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UC_CATEGORY UNIQUE (CATEGORY_ID),
    PRIMARY KEY (CATEGORY_ID)
    );
	
	
	
	CREATE TABLE SUB_CATEGORY ( 
    SUB_CATEGORY_ID INTEGER NOT NULL AUTO_INCREMENT,
    SUB_CATEGORY_NAME TEXT,
    IMAGE TEXT,
    CATEGORY_ID INTEGER,
    CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UC_SUB_CATEGORY UNIQUE (SUB_CATEGORY_ID),
    PRIMARY KEY (SUB_CATEGORY_ID),
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID)
    );
	
	
	
	CREATE TABLE PRODUCT ( 
    PRODUCT_ID INTEGER NOT NULL AUTO_INCREMENT,
    PRODUCT_NAME TEXT,
    PRODUCT_DESC TEXT,
    IN_STOCK INTEGER,
    VARIANT TEXT,
    SUB_CATEGORY_ID INTEGER,
    CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UC_PRODUCT UNIQUE (PRODUCT_ID),
    PRIMARY KEY (PRODUCT_ID),
    FOREIGN KEY (SUB_CATEGORY_ID) REFERENCES SUB_CATEGORY (SUB_CATEGORY_ID)
    );
	
	CREATE TABLE CART ( 
    CART_ID INTEGER NOT NULL AUTO_INCREMENT,
    CART_TOTAL_PRICE DECIMAL (18,2),
    CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UC_CART UNIQUE (CART_ID),
    PRIMARY KEY (CART_ID),
    FOREIGN KEY (CART_ID) REFERENCES MOUS_USER (USER_ID)
    );
	
	CREATE TABLE CART_DETAIL ( 
    CART_DETAIL_ID INTEGER NOT NULL AUTO_INCREMENT,
    QUANTITY INTEGER,
    PRODUCT_PRICE DECIMAL (18,2),
    TOTAL_PRICE DECIMAL (18,2),
    CART_ID INTEGER,
    PRODUCT_ID INTEGER,
    CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UC_CART_DETAIL UNIQUE (CART_DETAIL_ID),
    PRIMARY KEY (CART_DETAIL_ID),
    FOREIGN KEY (CART_ID) REFERENCES CART (CART_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID)
    );
	
	